#!/bin/bash
# based on http://stackoverflow.com/questions/4133904/ps1-line-with-git-current-branch-and-colors
# changed by Fredrik Lundhag

set_prompt()
{
   local last_cmd=$?
   local txtreset='$(tput sgr0)'
   local txtbold='$(tput bold)'
   local txtblack='$(tput setaf 0)'
   local txtred='$(tput setaf 1)'
   local txtgreen='$(tput setaf 2)'
   local txtyellow='$(tput setaf 3)'
   local txtblue='$(tput setaf 4)'
   local txtpurple='$(tput setaf 5)'
   local txtcyan='$(tput setaf 6)'
   local txtwhite='$(tput setaf 7)'
   local txtbackred='$(tput setab 1)'
   local txtbackgreen='$(tput setab 2)'

   # unicode "✗"
   local fancyx='\342\234\227'
   # unicode "✓"
   local checkmark='\342\234\223'

   # Line 1: Full date + full time (24h)
   # Line 2: current path
   #PS1="\[$txtbold\]\[$txtwhite\]\n\D{%A %d %B %Y %H:%M:%S}\n\[$txtgreen\]\w\n"

   PS1="\n"
   
   # User color: red for root, yellow for others
   if [[ $EUID == 0 ]]; then
       PS1+="\[$txtred\]"
   else
       PS1+="\[$txtyellow\]"   
   fi

   # @host - note if host is my laptop
   if [[ $HOSTNAME == "SEMALL0404" ]]; then
       PS1+="\u\[$txtwhite\]@\h"
   elif [ -e ~/.host-PS1-override ]; then
	   source ~/.host-PS1-override
   else
       PS1+="\u\[$txtwhite\]@\[$txtbackgreen\]\h\[$txtreset\]"
   fi
   
   # Path
   PS1+=":\[$txtgreen\]\w\n"


   # Line 4: a red "✗" or a green "✓" and the error number
   if [[ $last_cmd == 0 ]]; then
      PS1+="\[$txtgreen\]$checkmark \[$txtwhite\](0)"
   else
      PS1+="\[$txtred\]$fancyx \[$txtwhite\]($last_cmd)"
   fi

   # Line 4: green git branch
   PS1+="\[$txtgreen\]$(__git_ps1 ' (%s)')\[$txtwhite\]"
   # Line 4: good old prompt, $ for user, # for root
   # and \e is for gnome title
   PS1+=" \\$ \[\e]0;\u@\h: \w\a\]"
}

PROMPT_COMMAND='set_prompt'
